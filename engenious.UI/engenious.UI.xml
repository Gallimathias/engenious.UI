<?xml version="1.0"?>
<doc>
    <assembly>
        <name>engenious.UI</name>
    </assembly>
    <members>
        <member name="T:engenious.UI.HorizontalAlignment">
            <summary>
            Liste von Möglichkeiten zum horizontalen Alignment.
            </summary>
        </member>
        <member name="F:engenious.UI.HorizontalAlignment.Left">
            <summary>
            Links angeordnet
            </summary>
        </member>
        <member name="F:engenious.UI.HorizontalAlignment.Right">
            <summary>
            Rechts angeordnet
            </summary>
        </member>
        <member name="F:engenious.UI.HorizontalAlignment.Center">
            <summary>
            Zentriert
            </summary>
        </member>
        <member name="F:engenious.UI.HorizontalAlignment.Stretch">
            <summary>
            Auf voller Breite
            </summary>
        </member>
        <member name="T:engenious.UI.VerticalAlignment">
            <summary>
            Liste der Möglichkeiten zum vertikalen Alignment.
            </summary>
        </member>
        <member name="F:engenious.UI.VerticalAlignment.Top">
            <summary>
            Oben angeordnet
            </summary>
        </member>
        <member name="F:engenious.UI.VerticalAlignment.Bottom">
            <summary>
            Unten angeordnet
            </summary>
        </member>
        <member name="F:engenious.UI.VerticalAlignment.Center">
            <summary>
            Zentriert
            </summary>
        </member>
        <member name="F:engenious.UI.VerticalAlignment.Stretch">
            <summary>
            Volle Höhe
            </summary>
        </member>
        <member name="T:engenious.UI.AlphaTransition">
            <summary>
            Transition zur Veränderung der Transparenz eines Steuerelements.
            </summary>
        </member>
        <member name="M:engenious.UI.AlphaTransition.#ctor(engenious.UI.Control,System.Func{System.Single,System.Single},System.TimeSpan,System.Single)">
            <summary>
            Erzeugt eine neue AlphaTransition für das angegebene Control.
            </summary>
            <param name="control">Zielcontrol.</param>
            <param name="curve">Bewegungskurve.</param>
            <param name="duration">Animationslänge.</param>
            <param name="to">Zieltransparenz des Controls.</param>
        </member>
        <member name="M:engenious.UI.AlphaTransition.#ctor(engenious.UI.Control,System.Func{System.Single,System.Single},System.TimeSpan,System.TimeSpan,System.Single)">
            <summary>
            Erzeugt eine neue AlphaTransition für das angegebene Control.
            </summary>
            <param name="control">Zielcontrol.</param>
            <param name="curve">Bewegungskurve.</param>
            <param name="duration">Animationslänge.</param>
            <param name="delay">Wartezeit bis zum Start der Animation.</param>
            <param name="to">Zieltransparenz des Controls.</param>
        </member>
        <member name="M:engenious.UI.AlphaTransition.ApplyValue(engenious.UI.Control,System.Single)">
            <summary>
            Wendet die Transition auf das Steuerelement an.
            </summary>
            <param name="control">Zielcontrol der Transition.</param>
            <param name="position">Wert im zeitlichen Ablauf der Transition.</param>
        </member>
        <member name="M:engenious.UI.AlphaTransition.Clone(engenious.UI.Control)">
            <summary>
            Fertigt eine Kopie dieser Transition an, ersetzt aber das Zielcontrol.
            </summary>
            <param name="control">Das neue Zielcontrol.</param>
            <returns></returns>
        </member>
        <member name="T:engenious.UI.BaseScreenComponent">
            <summary>
            Basisklasse für alle MonoGame-Komponenten
            </summary>
        </member>
        <member name="F:engenious.UI.BaseScreenComponent.DEFAULTDOUBLECLICKDELAY">
            <summary>
            Maximaler Standard Delay zwischen zwei Clicks innerhalb eines Double Clicks.
            </summary>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.TitlePrefix">
            <summary>
            Prefix für die Titel-Leiste
            </summary>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.Frame">
            <summary>
            Gibt das Root-Control zurück oder legt dieses fest.
            </summary>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.ScreenTarget">
            <summary>
            Gibt das Control an, das zum navigieren der Screens verwendet wird.
            </summary>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.NavigateToTransition">
            <summary>
            Legt das Standard-Template für eine Navigation zu einem Screen fest.
            </summary>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.NavigateFromTransition">
            <summary>
            Legt das Standard-Template für eine Navigation von einem Screen weg fest.
            </summary>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.Content">
            <summary>
            Referenz zum MonoGame Content Manager.
            </summary>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.Dragging">
            <summary>
            Gibt an, ob gerade ein Drag-Vorgang im Gange ist.
            </summary>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.GamePadEnabled">
            <summary>
            Legt fest, ob es GamePad Support geben soll (nicht unterstützt bisher)
            </summary>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.MouseEnabled">
            <summary>
            Legt fest, ob es Maus Support geben soll
            </summary>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.KeyboardEnabled">
            <summary>
            Legt fest, ob es Keyboard Support geben soll.
            </summary>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.DoubleClickDelay">
            <summary>
            Gibt den maximalen Zeitraum in Millisekunden zwischen zwei Clicks an um einen Double Click auszulösen oder legt diesen fest.
            </summary>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.MouseMode">
            <summary>
            Gibt den aktuellen Modus der Maus zurück.
            </summary>
        </member>
        <member name="F:engenious.UI.BaseScreenComponent.resetMouse">
            <summary>
            Reset (ignore) mouse-position. Used to compensate first movement after mouse-capture.
            </summary>
        </member>
        <member name="M:engenious.UI.BaseScreenComponent.#ctor(engenious.IGame)">
            <summary>
            Erzeugt eine neue Instanz der Klasse BaseScreenComponent.
            </summary>
            <param name="game">Die aktuelle Game-Instanz.</param>
        </member>
        <member name="M:engenious.UI.BaseScreenComponent.LoadContent">
            <summary>
            Lädt die für MonoGameUI notwendigen Content-Dateien.
            </summary>
        </member>
        <member name="M:engenious.UI.BaseScreenComponent.Invoke(System.Action)">
            <summary>
            Führt einen Delegaten im UI-Thread aus.
            </summary>
            <param name="invokedAction">Ein Delegat, der eine aufzurufende Methode im Threadkontext des Steuerelements enthält.</param>
        </member>
        <member name="M:engenious.UI.BaseScreenComponent.Update(engenious.GameTime)">
            <summary>
            Handling aller Eingaben, Mausbewegungen und Updaten aller Screens und Controls.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:engenious.UI.BaseScreenComponent.Draw(engenious.GameTime)">
            <summary>
            Zeichnet Screens und Controls.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.CanGoBack">
            <summary>
            Gibt an ob der aktuelle History Stack eine Navigation Back-Navigation erlaubt.
            </summary>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.ActiveScreen">
            <summary>
            Referenz auf den aktuellen Screen.
            </summary>
        </member>
        <member name="P:engenious.UI.BaseScreenComponent.History">
            <summary>
            Liste der History.
            </summary>
        </member>
        <member name="M:engenious.UI.BaseScreenComponent.NavigateToScreen(engenious.UI.Controls.Screen,System.Object)">
            <summary>
            Navigiert den Screen Manager zum angegebenen Screen.
            </summary>
            <param name="screen"></param>
            <param name="parameter">Ein Parameter für den neuen Screen.</param>
            <returns>Gibt an ob die Navigation durchgeführt wurde.</returns>
        </member>
        <member name="M:engenious.UI.BaseScreenComponent.NavigateBack">
            <summary>
            Navigiert zurück, sofern möglich.
            </summary>
            <returns>Gibt an ob die Navigation durchgeführt wurde.</returns>
        </member>
        <member name="M:engenious.UI.BaseScreenComponent.NavigateHome">
            <summary>
            Navigiert bis zum ersten Screen zurück.
            </summary>
        </member>
        <member name="M:engenious.UI.BaseScreenComponent.Flyout(engenious.UI.Control,engenious.Point)">
            <summary>
            Öffnet ein Flyout.
            </summary>
            <param name="control"></param>
            <param name="position"></param>
        </member>
        <member name="M:engenious.UI.BaseScreenComponent.Flyback(engenious.UI.Control)">
            <summary>
            Schließt ein Flyout wieder.
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:engenious.UI.BaseScreenComponent.CaptureMouse">
            <summary>
            Wechselt in den Catured Mouse Mode.
            </summary>
        </member>
        <member name="M:engenious.UI.BaseScreenComponent.FreeMouse">
            <summary>
            Wechselt in den Free Mouse Mode.
            </summary>
        </member>
        <member name="E:engenious.UI.BaseScreenComponent.KeyDown">
            <summary>
            Event, das aufgerufen wird, wenn eine Taste gedrückt wird.
            </summary>
        </member>
        <member name="E:engenious.UI.BaseScreenComponent.KeyPress">
            <summary>
            Event, das aufgerufen wird, wenn eine Taste gedrückt ist.
            </summary>
        </member>
        <member name="E:engenious.UI.BaseScreenComponent.KeyUp">
            <summary>
            Event, das aufgerufen wird, wenn eine taste losgelassen wird.
            </summary>
        </member>
        <member name="E:engenious.UI.BaseScreenComponent.ClientSizeChanged">
            <summary>
            Event, das aufgerufen wird, wenn die Fenstergröße geändert wurde.
            </summary>
        </member>
        <member name="T:engenious.UI.Border">
            <summary>
            Struct zur Verwaltung von Rahmen-Informationen für Margins und Paddings.
            </summary>
        </member>
        <member name="F:engenious.UI.Border.Left">
            <summary>
            Linke Seite
            </summary>
        </member>
        <member name="F:engenious.UI.Border.Top">
            <summary>
            Obere Seite
            </summary>
        </member>
        <member name="F:engenious.UI.Border.Right">
            <summary>
            Rechte Seite
            </summary>
        </member>
        <member name="F:engenious.UI.Border.Bottom">
            <summary>
            Untere Seite
            </summary>
        </member>
        <member name="M:engenious.UI.Border.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Erstellt eine Border-Instanz mit den angegebenen Initialwerten.
            </summary>
            <param name="left">Abstand links</param>
            <param name="top">Abstand oben</param>
            <param name="right">Abstand rechts</param>
            <param name="bottom">Abstand unten</param>
        </member>
        <member name="M:engenious.UI.Border.All(System.Int32)">
            <summary>
            Erstellt einen Border mit gleichem Abstand auf allen vier Seiten.
            </summary>
            <param name="value">Wert für alle vier Seiten.</param>
            <returns>Border-Instanz</returns>
        </member>
        <member name="M:engenious.UI.Border.All(System.Int32,System.Int32)">
            <summary>
            Erstellt einen Border auf Basis der Angaben für horizontale und vertikale Werte.
            </summary>
            <param name="horizontal">Abstand für horizontale Seiten (links, rechts)</param>
            <param name="vertical">Abstand für vertikale Seiten (oben, unten)</param>
            <returns>Border-Instanz</returns>
        </member>
        <member name="M:engenious.UI.Border.All(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Erstellt eine Border-Instanz mit den angegebenen Initialwerten.
            </summary>
            <param name="left">Abstand links</param>
            <param name="top">Abstand oben</param>
            <param name="right">Abstand rechts</param>
            <param name="bottom">Abstand unten</param>
            <returns>Border-Instanz</returns>
        </member>
        <member name="M:engenious.UI.Border.ToString">
            <summary>
            Wandelt die aktuelle Border-Instanz in einen string um.
            </summary>
            <returns></returns>
        </member>
        <member name="M:engenious.UI.Border.Equals(System.Object)">
            <summary>
            Überprüft, ob die aktuelle Border-Instanz gleich der gegebenen ist.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:engenious.UI.Border.Equals(engenious.UI.Border)">
            <summary>
            Überprüft, ob die aktuelle Border-Instanz gleich der gegebenen ist.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:engenious.UI.Border.GetHashCode">
            <summary>
            Gibt einen Hashwert zurück
            </summary>
            <returns></returns>
        </member>
        <member name="T:engenious.UI.BorderBrush">
            <summary>
            Brush für einfarbige Hintergründe und automatisch generierte Umrahmungslinien.
            </summary>
        </member>
        <member name="P:engenious.UI.BorderBrush.BackgroundColor">
            <summary>
            Gibt die Hintergrund-Farbe des Rahmens zurück oder legt diese fest.
            </summary>
        </member>
        <member name="P:engenious.UI.BorderBrush.LineWidth">
            <summary>
            Gibt die Liniendicke des Rahmens zurück oder legt diese fest.
            </summary>
        </member>
        <member name="P:engenious.UI.BorderBrush.LineColor">
            <summary>
            Legt die Linienfarbe des Rahmens zurück oder liegt diese fest.
            </summary>
        </member>
        <member name="P:engenious.UI.BorderBrush.LineType">
            <summary>
            Gibt die Linienart des Rahmens zurück oder legt diese fest.
            </summary>
        </member>
        <member name="M:engenious.UI.BorderBrush.#ctor(engenious.Color)">
            <summary>
            Erzeugt eine neue Instanz der BorderBrush-Klasse
            </summary>
            <param name="backgroundColor">Die Hintergrundfarbe</param>
        </member>
        <member name="M:engenious.UI.BorderBrush.#ctor(engenious.UI.LineType,engenious.Color,System.Int32)">
            <summary>
            Erzeugt eine neue Instanz der BorderBrush-Klasse
            </summary>
            <param name="lineType">Der Typ der Umrandungslinie</param>
            <param name="lineColor">Die Farbe der Umrandungslinie</param>
            <param name="lineWidth">Die Dicke der Umrandungslinie</param>
        </member>
        <member name="M:engenious.UI.BorderBrush.#ctor(engenious.Color,engenious.UI.LineType,engenious.Color,System.Int32)">
            <summary>
            Erzeugt eine neue Instanz der BorderBrush-Klasse
            </summary>
            <param name="backgroundColor">Die Hintergrundfarbe</param>
            <param name="lineType">Der Typ der Umrandungslinie</param>
            <param name="lineColor">Die Farbe der Umrandungslinie</param>
            <param name="lineWidth">Die Dicke der Umrandungslinie</param>
        </member>
        <member name="M:engenious.UI.BorderBrush.Draw(engenious.Graphics.SpriteBatch,engenious.Rectangle,System.Single)">
            <summary>
            Zeichnet mit der aktuellen BorderBrush-Instanz
            </summary>
            <param name="batch">Der (bereits gestartete) SpriteBatch</param>
            <param name="area">Render-Bereich</param>
            <param name="alpha">Alpha-Blending</param>
        </member>
        <member name="T:engenious.UI.LineType">
            <summary>
            Liste von möglichen Linientypen
            </summary>
        </member>
        <member name="F:engenious.UI.LineType.None">
            <summary>
            Keine Linie
            </summary>
        </member>
        <member name="F:engenious.UI.LineType.Solid">
            <summary>
            Durchgängige Linie
            </summary>
        </member>
        <member name="F:engenious.UI.LineType.Dotted">
            <summary>
            Gepunktete Linie
            </summary>
        </member>
        <member name="T:engenious.UI.Brush">
            <summary>
            Abstrakte Basisklasse für alle Sorten von Brushes.
            </summary>
        </member>
        <member name="P:engenious.UI.Brush.MinWidth">
            <summary>
            Gibt die Minimale Breite des Brushs um noch gut auszusehen.
            </summary>
        </member>
        <member name="P:engenious.UI.Brush.MinHeight">
            <summary>
            Gibt die minimale Höhe des Brushes um noch gut auszusehen.
            </summary>
        </member>
        <member name="M:engenious.UI.Brush.Draw(engenious.Graphics.SpriteBatch,engenious.Rectangle,System.Single)">
            <summary>
            Draw-Methode für den Brush.
            </summary>
            <param name="batch">Der (bereits gestartete) SpriteBatch</param>
            <param name="area">Render-Bereich</param>
            <param name="alpha">Alpha-Blending</param>
        </member>
        <member name="T:engenious.UI.Control">
            <summary>
            Base-Class for all Controls
            </summary>
        </member>
        <member name="P:engenious.UI.Control.ScreenManager">
            <summary>
            Reference to the current screen manager
            </summary>
        </member>
        <member name="P:engenious.UI.Control.ClickSound">
            <summary>
            Sound to be played on click
            </summary>
        </member>
        <member name="P:engenious.UI.Control.HoverSound">
            <summary>
            Sound to be played on hover
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Background">
            <summary>
            Default background
            </summary>
        </member>
        <member name="P:engenious.UI.Control.HoveredBackground">
            <summary>
            Optional background on hover
            </summary>
        </member>
        <member name="P:engenious.UI.Control.PressedBackground">
            <summary>
            Optional background on pressed
            </summary>
        </member>
        <member name="P:engenious.UI.Control.DisabledBackground">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Margin">
            <summary>
            Legt den äußeren Abstand des Controls fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Padding">
            <summary>
            Legt den inneren Abstand des Controls fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.DrawFocusFrame">
            <summary>
            Legt fest ob der Fokus-Rahmen gezeichnet werden soll
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Tag">
            <summary>
            Platzhalter für jegliche Art der Referenz.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Style">
            <summary>
            Gibt den Style-Namen des Controls zurück oder legt diesen fest.
            </summary>
        </member>
        <member name="M:engenious.UI.Control.Draw(engenious.Graphics.SpriteBatch,engenious.Rectangle,engenious.GameTime)">
            <summary>
            Zeichenauruf für das Control (SpriteBatch ist bereits aktiviert)
            </summary>
            <param name="batch">Spritebatch</param>
            <param name="gameTime">Vergangene Spielzeit</param>
        </member>
        <member name="M:engenious.UI.Control.OnDraw(engenious.Graphics.SpriteBatch,engenious.Rectangle,engenious.GameTime)">
            <summary>
            Malt das komplette Control
            </summary>
            <param name="batch">Spritebatch</param>
            <param name="gameTime">GameTime</param>
            <param name="controlArea">Bereich für das Control in absoluten Koordinaten</param>
        </member>
        <member name="M:engenious.UI.Control.OnDrawBackground(engenious.Graphics.SpriteBatch,engenious.Rectangle,engenious.GameTime,System.Single)">
            <summary>
            Malt den Hintergrund des Controls
            </summary>
            <param name="batch">Spritebatch</param>
            <param name="backgroundArea">Bereich für den Background in absoluten Koordinaten</param>
            <param name="gameTime">GameTime</param>
            <param name="alpha">Die Transparenz des Controls.</param>
        </member>
        <member name="M:engenious.UI.Control.OnDrawContent(engenious.Graphics.SpriteBatch,engenious.Rectangle,engenious.GameTime,System.Single)">
            <summary>
            Malt den Content des Controls
            </summary>
            <param name="batch">Spritebatch</param>
            <param name="contentArea">Bereich für den Content in absoluten Koordinaten</param>
            <param name="gameTime">GameTime</param>
            <param name="alpha">Die Transparenz des Controls.</param>
        </member>
        <member name="M:engenious.UI.Control.OnDrawFocusFrame(engenious.Graphics.SpriteBatch,engenious.Rectangle,engenious.GameTime,System.Single)">
            <summary>
            Malt den Fokusrahmen des Controls
            </summary>
            <param name="batch">Spritebatch</param>
            <param name="contentArea">Bereich für den Content in absoluten Koordinaten</param>
            <param name="gameTime">GameTime</param>
            <param name="alpha">Die Transparenz des Controls.</param>
        </member>
        <member name="P:engenious.UI.Control.Enabled">
            <summary>
            Gibt an, ob das Control aktiv ist.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.AbsoluteEnabled">
            <summary>
            Ermittelt den absoluten Aktivierungsstatus von Root bis zu diesem Control.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Visible">
            <summary>
            Gibt an, ob das Control gerendert werden soll.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.AbsoluteVisible">
            <summary>
            Ermittelt den absoluten Sichtbarkeitsstatus von Root bis zu diesem Control.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Root">
            <summary>
            Gibt das Root-Element des zugehörigen Visual Tree zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.RootPath">
            <summary>
            Liefert den Control-Path von Root zum aktuellen Control.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Parent">
            <summary>
            Gibt das Parent-Element dieses Controls zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Children">
            <summary>
            Die Liste der enthaltenen Controls.
            </summary>
        </member>
        <member name="M:engenious.UI.Control.OnInsertControl(engenious.UI.CollectionEventArgs)">
            <summary>
            Ein neues Control wurde in die Children-Liste eingefügt.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:engenious.UI.Control.OnRemoveControl(engenious.UI.CollectionEventArgs)">
            <summary>
            Ein Control wurde aus der Children-Liste entfernt.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:engenious.UI.Control.OnParentChanged(engenious.UI.PropertyEventArgs{engenious.UI.Control})">
            <summary>
            Der Parent dieses Controls hat sich geändert.
            </summary>
            <param name="args"></param>
        </member>
        <member name="E:engenious.UI.Control.ParentChanged">
            <summary>
            Event das die Änderung des Parents signalisiert.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.HorizontalAlignment">
            <summary>
            Horizontale Ausrichtung im Dynamic-Mode.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Transformation">
            <summary>
            Gibt eine zusätzliche Render-Transformation an.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.AbsoluteTransformation">
            <summary>
            Gibt die absolute Transformation für dieses Control zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Alpha">
            <summary>
            Gibt den Alpha-Wert dieses Controls an.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.AbsoluteAlpha">
            <summary>
            Gibt den absoluten Alpha-Wert für dieses Control zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.VerticalAlignment">
            <summary>
            Vertikale Ausrichtung im Dynamic-Mode.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.MinWidth">
            <summary>
            Legt optional eine Mindestbreite für dieses Control fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Width">
            <summary>
            Legt optional eine definierte Breite für dieses Control fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.MaxWidth">
            <summary>
            Legt optional eine Maximalbreite für dieses Control fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.MinHeight">
            <summary>
            Legt optional eine Mindesthöhe für dieses Control fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Height">
            <summary>
            Legt optional eine definierte Höhe für dieses Control fest. 
            </summary>
        </member>
        <member name="P:engenious.UI.Control.MaxHeight">
            <summary>
            Legt optional eine Maximalbreite für dieses Control fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.ActualPosition">
            <summary>
            Gibt die tatsächliche Renderposition (exkl. Parent Offset) zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.AbsolutePosition">
            <summary>
            Gibt die absolute Position (global) dieses Controls zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.ActualSize">
            <summary>
            Gibt die tatsächliche Rendergröße zurück.
            </summary>
        </member>
        <member name="M:engenious.UI.Control.GetExpectedSize(engenious.Point)">
            <summary>
            Methode zur Ermittlung des notwendigen Platzes.
            </summary>
            <param name="available">Verfügbarer Platz für dieses Control</param>
            <returns>Benötigte Platz inklusive allen Rändern</returns>
        </member>
        <member name="M:engenious.UI.Control.GetMaxClientSize(engenious.Point)">
            <summary>
            Ermittelt die maximale Größe des Client Bereichs für dieses Control.
            </summary>
            <param name="containerSize"></param>
            <returns></returns>
        </member>
        <member name="M:engenious.UI.Control.GetMinClientSize(engenious.Point)">
            <summary>
            Ermittelt die minimale Größe des Client Bereichs für dieses Control.
            </summary>
            <param name="containerSize"></param>
            <returns></returns>
        </member>
        <member name="M:engenious.UI.Control.SetActualSize(engenious.Point)">
            <summary>
            Legt die tatsächliche Größe für dieses Control fest.
            </summary>
            <param name="available">Erwartete Größe des Controls (inkl. Borders)</param>
        </member>
        <member name="M:engenious.UI.Control.SetDimension(engenious.Point,engenious.Point)">
            <summary>
            Führt eine automatische Anordnung auf Basis der aktuellen Size und den Alignment-Parametern durch.
            </summary>
            <param name="containerSize"></param>
        </member>
        <member name="M:engenious.UI.Control.HasInvalidDimensions">
            <summary>
            Gibt zurück, ob die Größenangaben nicht mehr aktuell sind.
            </summary>
            <returns></returns>
        </member>
        <member name="M:engenious.UI.Control.CalculcateRequiredClientSpace(engenious.Point)">
            <summary>
            Ist für die Berechnung des Client-Contents zuständig und erleichtert das automatische Alignment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:engenious.UI.Control.InvalidateDimensions">
            <summary>
            Teilt dem Steuerelement mit, dass seine Größe neu berechnet werden muss.
            </summary>
        </member>
        <member name="M:engenious.UI.Control.OnResolutionChanged">
            <summary>
            Wird aufgerufen, wenn die Auflösung des Fensters geändert wird.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.ActualClientArea">
            <summary>
            Berechnet den Client-Bereich auf Basis der aktuellen 
            Position/Größe/Margin/Padding in lokalen Koordinaten.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.ActualClientSize">
            <summary>
            Berechnet den Verfügbaren Client-Bereich unter Berücksichtigung der 
            ActualSize und den eingestellten Margins und Paddings.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Borders">
            <summary>
            Ermittelt den gesamten Rand durch Margin und Padding.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Hovered">
            <summary>
            Gibt an, ob das Control unter der Maus ist.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Pressed">
            <summary>
            Gibt an ob das aktuelle Elemente gerade duch die Maus gedrückt wird.
            </summary>
        </member>
        <member name="M:engenious.UI.Control.InternalMouseMove(engenious.UI.MouseEventArgs)">
            <summary>
            Wird vom Parent aufgerufen wenn sich die Maus bewegt
            </summary>
            <param name="args">Parameter für Mouse-Events</param>
            <returns>Event verarbeitet?</returns>
        </member>
        <member name="M:engenious.UI.Control.OnLeftMouseDown(engenious.UI.MouseEventArgs)">
            <summary>
            Wird aufgerufen, wenn die linke Maustaste heruntergedrückt wird.
            </summary>
            <param name="args">Weitere Informationen zum Event.</param>
        </member>
        <member name="M:engenious.UI.Control.OnLeftMouseUp(engenious.UI.MouseEventArgs)">
            <summary>
            Wird aufgerufen, wenn die linke Maustaste losgelassen wird.
            </summary>
            <param name="args">Weitere Informationen zum Event.</param>
        </member>
        <member name="M:engenious.UI.Control.OnLeftMouseClick(engenious.UI.MouseEventArgs)">
            <summary>
            Wird aufgerufen, wenn mit der linken Maustaste auf das Steuerelement geklickt wird.
            </summary>
            <param name="args">Weitere Informationen zum Ereignis.</param>
        </member>
        <member name="M:engenious.UI.Control.OnRightMouseDown(engenious.UI.MouseEventArgs)">
            <summary>
            Wird aufgerufen, wenn die rechte Maustaste heruntergedrückt wird.
            </summary>
            <param name="args">Weitere Informationen zum Event.</param>
        </member>
        <member name="M:engenious.UI.Control.OnRightMouseUp(engenious.UI.MouseEventArgs)">
            <summary>
            Wird aufgerufen, wenn die rechte Maustaste losgelassen wird.
            </summary>
            <param name="args">Weitere Informationen zum Event.</param>
        </member>
        <member name="M:engenious.UI.Control.OnRightMouseClick(engenious.UI.MouseEventArgs)">
            <summary>
            Wird aufgerufen, wenn mit der rechten Maustaste auf das Steuerelement geklickt wird.
            </summary>
            <param name="args">Weitere Informationen zum Ereignis.</param>
        </member>
        <member name="E:engenious.UI.Control.LeftMouseDown">
            <summary>
            Wird aufgerufen, wenn die linke Maustaste heruntergedrückt wird.
            </summary>
        </member>
        <member name="E:engenious.UI.Control.LeftMouseUp">
            <summary>
            Wird aufgerufen, wenn die linke Maustaste losgelassen wird.
            </summary>
        </member>
        <member name="E:engenious.UI.Control.LeftMouseClick">
            <summary>
            Wird aufgerufen, wenn mit der linken Maustaste auf das Steuerelement geklickt wird.
            </summary>
        </member>
        <member name="E:engenious.UI.Control.RightMouseDown">
            <summary>
            Wird aufgerufen, wenn die rechte Maustaste heruntergedrückt wird.
            </summary>
        </member>
        <member name="E:engenious.UI.Control.RightMouseUp">
            <summary>
            Wird aufgerufen, wenn die rechte Maustaste losgelassen wird.
            </summary>
        </member>
        <member name="E:engenious.UI.Control.RightMouseClick">
            <summary>
            Wird aufgerufen, wenn mit der rechten Maustaste auf das Steuerelement geklickt wird.
            </summary>
        </member>
        <member name="M:engenious.UI.Control.OnKeyDown(engenious.UI.KeyEventArgs)">
            <summary>
            Wird aufgerufen, wenn eine Taste gedrückt wird.
            </summary>
            <param name="args">Zusätzliche Daten zum Event.</param>
        </member>
        <member name="M:engenious.UI.Control.OnKeyUp(engenious.UI.KeyEventArgs)">
            <summary>
            Wird aufgerufen, wenn eine Taste losgelassen wird.
            </summary>
            <param name="args">Zusätzliche Daten zum Event.</param>
        </member>
        <member name="M:engenious.UI.Control.OnKeyPress(engenious.UI.KeyEventArgs)">
            <summary>
            Wird aufgerufen, wenn eine Taste gedrückt ist.
            </summary>
            <param name="args">Zusätzliche Daten zum Event.</param>
        </member>
        <member name="E:engenious.UI.Control.KeyDown">
            <summary>
            Wird aufgerufen, wenn eine Taste gedrückt wird.
            </summary>
        </member>
        <member name="E:engenious.UI.Control.KeyUp">
            <summary>
            Wird aufgerufen, wenn eine Taste losgelassen wird.
            </summary>
        </member>
        <member name="E:engenious.UI.Control.KeyPress">
            <summary>
            Wird aufgerufen, wenn eine Taste gedrückt ist.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.TabStop">
            <summary>
            Legt fest, ob das Control per Tab zu erreichen ist.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.CanFocus">
            <summary>
            Gibt an ob das Control den Fokus bekommen kann oder legt dies fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.TabOrder">
            <summary>
            Gibt die Position der Tab-Reihenfolge an.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.Focused">
            <summary>
            Gibt an ob das aktuelle Control den Fokus hat.
            </summary>
        </member>
        <member name="P:engenious.UI.Control.ZOrder">
            <summary>
            Gibt die grafische Reihenfolge der Controls 
            innerhalb eines Containers an. (0 ganz vorne, 9999 weiter hinten)
            </summary>
        </member>
        <member name="M:engenious.UI.Control.Focus">
            <summary>
            Setzt den Fokus auf dieses Control.
            </summary>
        </member>
        <member name="M:engenious.UI.Control.Unfocus">
            <summary>
            Entfernt den Fokus.
            </summary>
        </member>
        <member name="M:engenious.UI.Control.SetFocus(engenious.UI.Control)">
            <summary>
            Setzt den Fokus auf das angegebene Control für den kompletten 
            Visual Tree ab diesem Control abwärts.
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:engenious.UI.Control.InternalTabbedForward">
            <summary>
            Tabbt den aktuellen Fokus eines Controls eine Stelle weiter.
            </summary>
            <returns>Tab konnte in diesem Ast ausgeführt werden</returns>
        </member>
        <member name="M:engenious.UI.Control.InternalTabbedBackward">
            <summary>
            Tabbt den aktuellen Fokus eines Controls eine Stelle zurück.
            </summary>
            <returns>Tab konnte in diesem Ast ausgeführt werden</returns>
        </member>
        <member name="T:engenious.UI.TreeState">
            <summary>
            Liste der möglichen Hover- und FokusStates
            </summary>
        </member>
        <member name="F:engenious.UI.TreeState.None">
            <summary>
            Keinen Flag.
            </summary>
        </member>
        <member name="F:engenious.UI.TreeState.Passive">
            <summary>
            Dieses Control wird nur durch Children gesetzt.
            </summary>
        </member>
        <member name="F:engenious.UI.TreeState.Active">
            <summary>
            Dises Control ist aktiv gesetzt.
            </summary>
        </member>
        <member name="T:engenious.UI.ControlCollection">
            <summary>
            Erweiterte Liste für Controls
            </summary>
        </member>
        <member name="T:engenious.UI.Controls.Button">
            <summary>
            Standard Schaltfläche
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.Button.#ctor(engenious.UI.BaseScreenComponent,System.String)">
            <summary>
            Erzeugt eine neue Instanz der Klasse Button.
            </summary>
            <param name="manager">Der <see cref="T:engenious.UI.BaseScreenComponent"/></param>
            <param name="style">(Optional) der zu verwendende Style</param>
        </member>
        <member name="M:engenious.UI.Controls.Button.OnKeyPress(engenious.UI.KeyEventArgs)">
            <summary>
            Wird aufgrefufen, wenn eine Taste gedrückt wird.
            </summary>
            <param name="args">Ein <see cref="T:engenious.UI.KeyEventArgs"/>-Objekt mit weiteren Informationen zum Event</param>
        </member>
        <member name="M:engenious.UI.Controls.Button.OnLeftMouseClick(engenious.UI.MouseEventArgs)">
            <summary>
            Wird aufgerufen, wenn mit der linken Maustaste auf das Steuerelement geklickt wird.
            </summary>
            <param name="args">Weitere Informationen zum Ereignis.</param>
        </member>
        <member name="M:engenious.UI.Controls.Button.OnExecuted(engenious.UI.EventArgs)">
            <summary>
            Methode, die aufgerufen wird, nachdem der Click-EventHadler (falls vorhanden) ausgeführt wurde.
            </summary>
            <param name="args">Weitere Informationen zum Ereignis.</param>
        </member>
        <member name="E:engenious.UI.Controls.Button.Executed">
            <summary>
            Event, das aufgerufen wird, nachdem der Click-EventHadler (falls vorhanden) ausgeführt wurde.
            </summary>
        </member>
        <member name="T:engenious.UI.Controls.Checkbox">
            <summary>
            Steuerelement, in das der Nutzer ein Häkchen setzen kann.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Checkbox.BoxBrush">
            <summary>
            Brush für das Kästchen.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Checkbox.InnerBoxBrush">
            <summary>
            Brush für den inneren Bereich des Checkbox-Kästchens.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Checkbox.HookBrush">
            <summary>
            Brush für den Haken der Checkbox.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Checkbox.Checked">
            <summary>
            Gibt an, ob der Haken gesetzt ist.
            </summary>
        </member>
        <member name="E:engenious.UI.Controls.Checkbox.CheckedChanged">
            <summary>
            Wird aufgerufen, wenn sich der Status der Checkbox geändert hat.
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.Checkbox.#ctor(engenious.UI.BaseScreenComponent)">
            <summary>
            Erzeugt eine neue Instanz der Klasse Checkbox
            </summary>
            <param name="manager">Der verwendete <see cref="T:engenious.UI.BaseScreenComponent"/></param>
        </member>
        <member name="M:engenious.UI.Controls.Checkbox.OnDrawContent(engenious.Graphics.SpriteBatch,engenious.Rectangle,engenious.GameTime,System.Single)">
            <summary>
            Malt den Content des Controls.
            </summary>
            <param name="batch">Spritebatch</param>
            <param name="contentArea">Bereich für den Content in absoluten Koordinaten</param>
            <param name="gameTime">GameTime</param>
            <param name="alpha">Die Transparenz des Controls.</param>
        </member>
        <member name="M:engenious.UI.Controls.Checkbox.OnLeftMouseClick(engenious.UI.MouseEventArgs)">
            <summary>
            Wird aufgerufen, wenn mit der linken Maustaste auf das Steuerelement geklickt wird.
            </summary>
            <param name="args">Weitere Informationen zum Ereignis.</param>
        </member>
        <member name="M:engenious.UI.Controls.Checkbox.OnKeyDown(engenious.UI.KeyEventArgs)">
            <summary>
            Wird aufgerufen, wenn eine Taste gedrückt wird.
            </summary>
            <param name="args">Zusätzliche Daten zum Event.</param>
        </member>
        <member name="T:engenious.UI.Controls.Checkbox.CheckedChangedDelegate">
            <summary>
            Delegat für CheckedChanged-Events.
            </summary>
            <param name="Checked">Gibt an, ob das Steuerelement aktiviert ist.</param>
        </member>
        <member name="T:engenious.UI.Controls.Combobox`1">
            <summary>
            Typische Combobox zur Auswahl eines Elements aus einer Liste.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:engenious.UI.Controls.ContainerControl">
            <summary>
            Basisklasse für alle Controls mit mehreren Inhalten
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ContainerControl.Controls">
            <summary>
            Liste aller Controls
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.ContainerControl.#ctor(engenious.UI.BaseScreenComponent,System.String)">
            <summary>
            Erzeugt eine neue Instanz der ContainerControl-Klasse.
            </summary>
            <param name="manager">Der <see cref="T:engenious.UI.BaseScreenComponent"/></param>
            <param name="style">Der zu verwendende Style</param>
        </member>
        <member name="P:engenious.UI.Controls.ContentControl.Content">
            <summary>
            Das enthaltene Control.
            </summary>
        </member>
        <member name="T:engenious.UI.Controls.Grid.CellMapping">
            <summary>
            Interne Klasse zur Haltung der Cell-Mappings
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Grid.CellMapping.Control">
            <summary>
            Referenz auf das entsprechende Control
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Grid.CellMapping.Columns">
            <summary>
            Auflistung der betroffenen Columns
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Grid.CellMapping.Rows">
            <summary>
            Auflistung der betroffenen Rows
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Grid.CellMapping.ExpectedSize">
            <summary>
            Erwartete Control-Größe
            </summary>
        </member>
        <member name="T:engenious.UI.Controls.Image">
            <summary>
            Steuerelement, das ein Bild darstellt.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Image.Texture">
            <summary>
            Das darzustellende Bild als Textur.
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.Image.#ctor(engenious.UI.BaseScreenComponent,System.String)">
            <summary>
            Erzeugt eine neue Instanz eines Bildsteuerlements.
            </summary>
            <param name="manager">Der verwendete <see cref="T:engenious.UI.BaseScreenComponent"/></param>
            <param name="style">(Optional) Der zu verwendende Style.</param>
        </member>
        <member name="M:engenious.UI.Controls.Image.CalculcateRequiredClientSpace(engenious.Point)">
            <summary>
            Ist für die Berechnung des Client-Contents zuständig und erleichtert das automatische Alignment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:engenious.UI.Controls.Image.OnDrawContent(engenious.Graphics.SpriteBatch,engenious.Rectangle,engenious.GameTime,System.Single)">
            <summary>
            Malt den Content des Controls.
            </summary>
            <param name="batch">Spritebatch.</param>
            <param name="area">Bereich für den Content in absoluten Koordinaten.</param>
            <param name="gameTime">GameTime.</param>
            <param name="alpha">Die Transparenz des Controls.</param>
        </member>
        <member name="T:engenious.UI.Controls.Label">
            <summary>
            Standard Text-Anzeige Control.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Label.Text">
            <summary>
            Gibt den enthaltenen Text an oder legt diesen fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Label.Font">
            <summary>
            Gibt die Schriftart an mit der der Inhalt gezeichnet werden soll oder legt diese fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Label.TextColor">
            <summary>
            Gibt die Textfarbe an mit der der Inhalt gezeichnet werden soll oder legt diese fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Label.HorizontalTextAlignment">
            <summary>
            Gibt die Ausrichtung des Textes innerhalb des Controls auf horizontaler Ebene an.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Label.VerticalTextAlignment">
            <summary>
            Gibt die Ausrichtung des Textes innerhalb des Controls auf vertikaler Ebene an.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Label.WordWrap">
            <summary>
            Gibt an, ob das Control automatisch den Text an geeigneter Stelle 
            umbrechen soll, falls er nicht in eine Zeile passt.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Label.LineWrap">
            <summary>
            Gibt an, ob Zeilenumbrüche interpretiert werden sollen.
            </summary>
        </member>
        <member name="T:engenious.UI.Controls.Listbox`1">
            <summary>
            List-Control für jegliche Art von Daten.
            </summary>
            <typeparam name="T">Datentyp der aufzulistenden Daten</typeparam>
        </member>
        <member name="P:engenious.UI.Controls.Listbox`1.ScrollContainer">
            <summary>
            Gibt den Scroll-Container zurück der um das Stackpanel der ListBox gespannt ist.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Listbox`1.StackPanel">
            <summary>
            Gibt das StackPanel zurück das für die Auflistung der Items genutzt wird.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Listbox`1.SelectedItemContainer">
            <summary>
            Liefert das Container Control des aktuell selektierten Items zurück.
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.Listbox`1.GetItemContainer(`0)">
            <summary>
            Liefert das Container-Control des angegebenen Elements.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:engenious.UI.Controls.Listbox`1.EnsureVisibility(`0)">
            <summary>
            Stellt die Sichtbarkeit des angegebenen Items sicher.
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:engenious.UI.Controls.ListControl`1">
            <summary>
            Basis-Control für Item-Listen
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ListControl`1.Items">
            <summary>
            Liefert eine Liste der enthaltenen Elemente zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ListControl`1.SelectedItem">
            <summary>
            Liefert das aktuell selektierte Element zurück oder legt dieses fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ListControl`1.SelectedItemBrush">
            <summary>
            Gibt den Brush für selektierte Elemente zurück oder legt diesen fest.
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.ListControl`1.#ctor(engenious.UI.BaseScreenComponent,System.String)">
            <summary>
            Standard Konstruktor für das List-Control.
            </summary>
            <param name="manager"></param>
        </member>
        <member name="T:engenious.UI.Controls.Panel">
            <summary>
            Ein einfacher Container für Steuerelemente
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.Panel.#ctor(engenious.UI.BaseScreenComponent)">
            <summary>
            Erstellt eine neue Instanz der Klasse Panel
            </summary>
            <param name="manager">Der verwendete <see cref="T:engenious.UI.BaseScreenComponent"/></param>
        </member>
        <member name="P:engenious.UI.Controls.ProgressBar.Orientation">
            <summary>
            Gibt die Ausrichtung der Progress-Bar zurück oder legt diese fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ProgressBar.Value">
            <summary>
            Gibt den Fortschritt des Balkens an.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ProgressBar.Maximum">
            <summary>
            Gibt den Maximalwert des Balkens an.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ProgressBar.BarBrush">
            <summary>
            Gibt den Brush an, mit dem der Inhalt des Balkens gemalt werden soll.
            </summary>
        </member>
        <member name="T:engenious.UI.Controls.Screen">
            <summary>
            Bildschirmseite zur Aufnahme von Controls.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Screen.Manager">
            <summary>
            Gibt die Referenz auf den aktuellen Screen-Manager zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Screen.Title">
            <summary>
            Gibt den Titel des Screens zurück. Der Manager übernimmt diesen Titel 
            standardmäßig in der Titelleiste des Fensters.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Screen.IsOverlay">
            <summary>
            Gibt an, ob es sich bei diesem Screen lediglich um ein Overlay handelt. Dies 
            sorgt dafür, dass der darunter liegende Screen weiterhin sichtbar bleibt und 
            gerendert wird.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Screen.InHistory">
            <summary>
            Gibt an ob dieser Screen einen Eintrag im History Stack erhalten 
            soll. ist diese Eigenschaft auf false, wird er bei der Zurück-Navigation 
            übersprungen. Dies ist beispieslweise praktisch für Lade-Screens.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Screen.DefaultMouseMode">
            <summary>
            Gibt den Standard Mouse Mode für diesen Screen zurück. Er wird beim Navigieren 
            zu diesem Screen angewendet.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Screen.IsActiveScreen">
            <summary>
            Gibt an ob dieser Screen der aktive Screen ist.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Screen.IsVisibleScreen">
            <summary>
            Gibt an ob dieser Screen im aktuellen Stack sichtbar ist.
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.Screen.#ctor(engenious.UI.BaseScreenComponent)">
            <summary>
            Erzeugt einen neuen Screen.
            </summary>
            <param name="manager">Der verwendete <see cref="T:engenious.UI.BaseScreenComponent"/></param>
        </member>
        <member name="M:engenious.UI.Controls.Screen.OnNavigateTo(engenious.UI.NavigationEventArgs)">
            <summary>
            Signalisiert die Navigation hin zu diesem Screen. Der Screen kann hier noch entscheiden ob die
            Navigation stattfinden soll oder nicht.
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.Screen.OnNavigatedTo(engenious.UI.NavigationEventArgs)">
            <summary>
            Signalisiert den abgeschlossenen Navigationsaufruf auf diese Seite.
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.Screen.OnNavigateFrom(engenious.UI.NavigationEventArgs)">
            <summary>
            Signalisiert den Versuch von dieser Seite weg zu navigieren. Die Seite kann diese Navigation unterbinden.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:engenious.UI.Controls.Screen.OnNavigatedFrom(engenious.UI.NavigationEventArgs)">
            <summary>
            Signalisiert den abgeschlossenen Navigationsaufruf von dieser Seite weg.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:engenious.UI.Controls.Screen.OnIsActiveScreenChanged(engenious.UI.PropertyEventArgs{System.Boolean})">
            <summary>
            Signalisiert den Screenwechsel beim Navigationsaufruf an.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:engenious.UI.Controls.Screen.OnIsVisibleScreenChanged(engenious.UI.PropertyEventArgs{System.Boolean})">
            <summary>
            Signalisiert den Sichtbarkeitswechsel des Screens.
            </summary>
            <param name="args"></param>
        </member>
        <member name="E:engenious.UI.Controls.Screen.IsActiveScreenChanged">
            <summary>
            Signalisiert die Änderung in der Eigenschaft IsActiveScreen.
            </summary>
        </member>
        <member name="E:engenious.UI.Controls.Screen.IsVisibleScreenChanged">
            <summary>
            Signalisiert die Änderung in der Eigenschaft IsVisibleScreen.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ScrollContainer.ScrollSpeed">
            <summary>
            Legt die Scrollgeschwindigkeit fest
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ScrollContainer.HorizontalScrollbarEnabled">
            <summary>
            Gibt an, ob es eine horizontale Scrollbar geben soll.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ScrollContainer.VerticalScrollbarEnabled">
            <summary>
            Gibt an, ob es eine vertikale Scrollbar geben soll.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ScrollContainer.VirtualSize">
            <summary>
            Gibt die Größe des virtuellen Client-Bereichs an.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ScrollContainer.VerticalScrollPosition">
            <summary>
            Gibt die Scroll-Position auf der virtuellen Achse an oder legt diese fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ScrollContainer.HorizontalScrollPosition">
            <summary>
            Gibt die Scroll-Position auf der horizontalen Achse an oder legt diese fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ScrollContainer.ScrollerMinSize">
            <summary>
            Gibt die Mindestgröße für den greifbaren Scroller an.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.ScrollContainer.VisibleArea">
            <summary>
            Gibt den aktuell sichtbaren Bereich zurück.
            </summary>
        </member>
        <member name="T:engenious.UI.Controls.Slider">
            <summary>
            Das Slider-Control erlaubt das Verschieben eines Reglers per Maus oder Tastatur.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Slider.Orientation">
            <summary>
            Gibt die grafische Ausrichtung des Sliders zurück oder legt diese fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Slider.KnobBrush">
            <summary>
            Gibt den Brush, mit dem der Slider-Vordergrund gemalt werden soll, zurück oder legt diesen fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Slider.Range">
            <summary>
            Gibt den Maximalwert zurück oder legt diesen fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Slider.KnobSize">
            <summary>
            Gibt die Breite/Höhe des Sliders zurück oder legt diesen fest.
            </summary>
        </member>
        <member name="F:engenious.UI.Controls.Slider.sliderValue">
            <summary>
            Der aktuelle Wert
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Slider.Value">
            <summary>
            Gibt den aktuellen Wert zurück oder legt diesen fest.
            </summary>
        </member>
        <member name="F:engenious.UI.Controls.Slider.mouseClickActive">
            <summary>
            Gibt an ob die Maus geklickt wird während das Control fokussiert ist
            </summary>
        </member>
        <member name="E:engenious.UI.Controls.Slider.ValueChanged">
            <summary>
            Wird ausgelöst wenn sich der Wert ändert
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.Slider.#ctor(engenious.UI.BaseScreenComponent,System.String)">
            <summary>
            Erzeugt einen neuen Slider.
            </summary>
            <param name="manager">Der verwendete <see cref="T:engenious.UI.BaseScreenComponent"/></param>
            <param name="style">(Optional) Der zu verwendende Style.</param>
        </member>
        <member name="M:engenious.UI.Controls.Slider.OnDrawContent(engenious.Graphics.SpriteBatch,engenious.Rectangle,engenious.GameTime,System.Single)">
            <summary>
            Malt den Content des Controls
            </summary>
            <param name="batch">Spritebatch</param>
            <param name="contentArea">Bereich für den Content in absoluten Koordinaten</param>
            <param name="gameTime">GameTime</param>
            <param name="alpha">Die Transparenz des Controls.</param>
        </member>
        <member name="M:engenious.UI.Controls.Slider.OnLeftMouseDown(engenious.UI.MouseEventArgs)">
            <summary>
            Wird aufgerufen, wenn die linke Maustaste heruntergedrückt wird.
            </summary>
            <param name="args">Weitere Informationen zum Event.</param>
        </member>
        <member name="M:engenious.UI.Controls.Slider.OnLeftMouseUp(engenious.UI.MouseEventArgs)">
            <summary>
            Wird aufgerufen, wenn die linke Maustaste losgelassen wird.
            </summary>
            <param name="args">Weitere Informationen zum Event.</param>
        </member>
        <member name="T:engenious.UI.Controls.Slider.ValueChangedDelegate">
            <summary>
            Delegat zur Änderung des Slider-Wertes.
            </summary>
            <param name="Value">Der neue Wert.</param>
        </member>
        <member name="M:engenious.UI.Controls.Slider.OnKeyPress(engenious.UI.KeyEventArgs)">
            <summary>
            Wird aufgerufen, wenn eine Taste gedrückt ist.
            </summary>
            <param name="args">Zusätzliche Daten zum Event.</param>
        </member>
        <member name="T:engenious.UI.Controls.Splitter">
            <summary>
            Container zur Aufslittung zweier Controls in zwei größenveränderbare Panels.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Splitter.Slot1">
            <summary>
            Inhalt des ersten Panels (je nach Orientierung oben oder links)
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Splitter.Slot1MinSize">
            <summary>
            Mindestgröße des ersten Panels oder null, falls egal
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Splitter.Slot1MaxSize">
            <summary>
            Maximalgröße des ersten Panels oder null, falls egal.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Splitter.Slot2">
            <summary>
            Inhalt des zweiten Panels (je nach Orientierung unten oder rechts).
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Splitter.Slot2MinSize">
            <summary>
            Mindestgröße des zweiten Panels oder null, falls egal.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Splitter.Slot2MaxSize">
            <summary>
            Maximalgröße des zweiten Panels oder null, falls egal.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Splitter.SplitterSize">
            <summary>
            Die Breite des Splitt-Bereichs.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Splitter.SplitterPosition">
            <summary>
            Aktuelle Position des Splitters.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Splitter.ActualSplitterPosition">
            <summary>
            Gibt die tatsächliche Splitterposition zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Splitter.Orientation">
            <summary>
            Gibt die Ausrichtung des Splitters an oder legt diese fest. Horizontal 
            splittet den Bereich in Links (Slot1) und Rechts (Slot2), Vertikal 
            hingegen in Oben (Slot1) und Unten (Slot2).
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Splitter.SplitterBrushHorizontal">
            <summary>
            Der Brush der für das Zeichnen des Splitters (bei horizontaler 
            Orientierung) verwendet werden soll.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Splitter.SplitterBrushVertical">
            <summary>
            Der Brush der für das Zeichnen des Splitters (bei vertikaler 
            Orientierung) verwendet werden soll.
            </summary>
        </member>
        <member name="E:engenious.UI.Controls.Splitter.Slot1Changed">
            <summary>
            Event signalisiert eine Änderung des Controls in Slot 1.
            </summary>
        </member>
        <member name="E:engenious.UI.Controls.Splitter.Slot2Changed">
            <summary>
            Event signalisiert eine Änderung des Controls in Slot 2.
            </summary>
        </member>
        <member name="E:engenious.UI.Controls.Splitter.Slot1MinSizeChanged">
            <summary>
            Event signalisiert eine Änderung bei der minimalen Größe von Slot 1.
            </summary>
        </member>
        <member name="E:engenious.UI.Controls.Splitter.Slot1MaxSizeChanged">
            <summary>
            Event signalisiert eine Änderung bei der maximalen Größe von Slot 1.
            </summary>
        </member>
        <member name="E:engenious.UI.Controls.Splitter.Slot2MinSizeChanged">
            <summary>
            Event signalisiert eine Änderung bei der minimalen Größe von Slot 2.
            </summary>
        </member>
        <member name="E:engenious.UI.Controls.Splitter.Slot2MaxSizeChanged">
            <summary>
            Event signalisiert eine Änderung bei der maximalen Größe von Slot 2.
            </summary>
        </member>
        <member name="E:engenious.UI.Controls.Splitter.SplitterPositionChanged">
            <summary>
            Event signalisiert eine Änderung der aktuellen Splitter-Position.
            </summary>
        </member>
        <member name="E:engenious.UI.Controls.Splitter.SplitterSizeChanged">
            <summary>
            Event signalisiert eine Änderung der Splitter-Größe.
            </summary>
        </member>
        <member name="T:engenious.UI.Controls.StackPanel">
            <summary>
            Container zur Aufreihung von weiteren Controls in einer bestimmten Ausrichtung.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.StackPanel.Orientation">
            <summary>
            Gibt die Ausrichtungsrichtung des Stacks an oder legt diesen fest.
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.StackPanel.#ctor(engenious.UI.BaseScreenComponent)">
            <summary>
            Erzeugt eine neue Instanz der Klasse StackPanel.
            </summary>
            <param name="manager">Der <see cref="T:engenious.UI.BaseScreenComponent"/></param>
        </member>
        <member name="M:engenious.UI.Controls.StackPanel.OnOrientationChanged(engenious.UI.PropertyEventArgs{engenious.UI.Orientation})">
            <summary>
            Signialisiert die Veränderung der Orientation-Eigenschaft.
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:engenious.UI.Controls.TabControl.Pages">
            <summary>
            Liste alle Pages
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.TabControl.Content">
            <summary>
            Content des TabControl
            </summary>
        </member>
        <member name="F:engenious.UI.Controls.TabControl.tabListStack">
            <summary>
            Die zur Darstellung benötigten Controls
            </summary>
        </member>
        <member name="F:engenious.UI.Controls.TabControl.tabActiveBrush">
            <summary>
            Die nötigen Brushes
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.TabControl.TabActiveBrush">
            <summary>
            Die Brush für den aktiven Tab
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.TabControl.TabBrush">
            <summary>
            Brush für inaktive Tabs
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.TabControl.TabPageBackground">
            <summary>
            Brush für den TabPage Background
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.TabControl.TabListBackground">
            <summary>
            Brush für den Hintergrund der TabListe
            </summary>
        </member>
        <member name="F:engenious.UI.Controls.TabControl.tabSpacing">
            <summary>
            Spacing zwischen Tabs
            </summary>
        </member>
        <member name="F:engenious.UI.Controls.TabControl.SelectedTabIndex">
            <summary>
            Der Index des aktiven Tabs
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.TabControl.#ctor(engenious.UI.BaseScreenComponent)">
            <summary>
            Base Constructor
            </summary>
            <param name="manager">ScreenManager</param>
        </member>
        <member name="M:engenious.UI.Controls.TabControl.OnInserted(engenious.UI.Controls.TabPage,System.Int32)">
            <summary>
            Wird aufgerufen wenn ein neues Element zu "Pages" hinzugefügt wird, erstellt einen neuen Eintrag in der TabList
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.TabControl.OnRemove(engenious.UI.Controls.TabPage,System.Int32)">
            <summary>
            Wird aufgerufen wenn ein Element aus "Pages" entfernt wird, entfernt den Eintrag in der TabList
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.TabControl.SelectTab(System.Int32)">
            <summary>
            Selektieren eines Tabs mit Index
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.TabControl.SelectTab(engenious.UI.Controls.TabPage)">
            <summary>
            Selektieren eines Tabs mit Page
            </summary>
        </member>
        <member name="E:engenious.UI.Controls.TabControl.TabIndexChanged">
            <summary>
            Event wenn der TabIndex sich ändert
            </summary>
        </member>
        <member name="T:engenious.UI.Controls.Textbox">
            <summary>
            Control für Texteingabe
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Textbox.CursorPosition">
            <summary>
            Gibt die aktuelle Cursor-Position an oder legt diese fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.Textbox.SelectionStart">
            <summary>
            Gibt den Beginn des Selektionsbereichs an oder legt diesen fest.
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.Textbox.#ctor(engenious.UI.BaseScreenComponent,System.String)">
            <summary>
            Erzeugt eine neue Instanz der Textbox-Klasse
            </summary>
            <param name="manager"></param>
            <param name="style"></param>
        </member>
        <member name="M:engenious.UI.Controls.Textbox.OnDrawContent(engenious.Graphics.SpriteBatch,engenious.Rectangle,engenious.GameTime,System.Single)">
            <summary>
            Malt den Content des Controls
            </summary>
            <param name="batch">Spritebatch</param>
            <param name="area">Bereich für den Content in absoluten Koordinaten</param>
            <param name="gameTime">GameTime</param>
            <param name="alpha">Die Transparenz des Controls.</param>
        </member>
        <member name="M:engenious.UI.Controls.Textbox.OnKeyPress(engenious.UI.KeyEventArgs)">
            <summary>
            Wird aufgerufen, wenn eine Taste gedrückt ist.
            </summary>
            <param name="args">Zusätzliche Daten zum Event.</param>
        </member>
        <member name="T:engenious.UI.Controls.TextButton">
            <summary>
            Standard-Schaltfläche mit Text.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.TextButton.Font">
            <summary>
            Gibt die Schriftart an mit der der Inhalt gezeichnet werden soll oder legt diese fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.TextButton.TextColor">
            <summary>
            Gibt die Textfarbe an mit der der Inhalt gezeichnet werden soll oder legt diese fest.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.TextButton.HorizontalTextAlignment">
            <summary>
            Gibt die Ausrichtung des Textes innerhalb des Controls auf horizontaler Ebene an.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.TextButton.VerticalTextAlignment">
            <summary>
            Gibt die Ausrichtung des Textes innerhalb des Controls auf vertikaler Ebene an.
            </summary>
        </member>
        <member name="P:engenious.UI.Controls.TextButton.WordWrap">
            <summary>
            Gibt an, ob das Control automatisch den Text an geeigneter Stelle
            umbrechen soll, falls er nicht in eine Zeile passt.
            </summary>
        </member>
        <member name="M:engenious.UI.Controls.TextButton.#ctor(engenious.UI.BaseScreenComponent,System.String,System.String)">
            <summary>
            Initialisiert einen Standard-Button mit Text-Inhalt.
            </summary>
            <param name="manager">Der <see cref="T:engenious.UI.BaseScreenComponent"/>.</param>
            <param name="text">Text, der auf der Schaltfläche angezeigt werden soll.</param>
            <param name="style">(Optional) Der zu verwendende Style.</param>
        </member>
        <member name="T:engenious.UI.EventArgs">
            <summary>
            Basisklasse für alle Arten von Event Args innerhalb des UI Frameworks
            </summary>
        </member>
        <member name="P:engenious.UI.EventArgs.Handled">
            <summary>
            Gibt an ob das Event bereits verarbeitet wurde oder legt dies fest.
            </summary>
        </member>
        <member name="T:engenious.UI.DragEventArgs">
            <summary>
            Basisklasse für alle DragDrop Events
            </summary>
        </member>
        <member name="P:engenious.UI.DragEventArgs.Sender">
            <summary>
            Optionales Feld um das sendende Control einzufügen.
            </summary>
        </member>
        <member name="P:engenious.UI.DragEventArgs.Icon">
            <summary>
            Optionales Icon, das während des Drag-Vorgangs angezeigt werden soll.
            </summary>
        </member>
        <member name="P:engenious.UI.DragEventArgs.IconSize">
            <summary>
            Angabe der Größe des Icons, das beim Drag-Vorgang angezeigt wird.
            </summary>
        </member>
        <member name="P:engenious.UI.DragEventArgs.Content">
            <summary>
            Content, der gedraggt wird.
            </summary>
        </member>
        <member name="T:engenious.UI.PointerEventArgs">
            <summary>
            Basisklasse für alle Positionsbasierten Events (Maus, Touch)
            </summary>
        </member>
        <member name="P:engenious.UI.PointerEventArgs.Bubbled">
            <summary>
            Gibt an, ob das Event 
            </summary>
        </member>
        <member name="P:engenious.UI.PointerEventArgs.LocalPosition">
            <summary>
            Position des Mauspointers bezogen auf den Ursprung des aktuellen Controls
            </summary>
        </member>
        <member name="P:engenious.UI.PointerEventArgs.GlobalPosition">
            <summary>
            Position des Mauspointers in globaler Screen-Koordinate
            </summary>
        </member>
        <member name="T:engenious.UI.PropertyEventArgs`1">
            <summary>
            Standard Event Args bei Property Changed Events.
            </summary>
            <typeparam name="T">Typ des Properties</typeparam>
        </member>
        <member name="P:engenious.UI.PropertyEventArgs`1.OldValue">
            <summary>
            Der alte Wert der Property
            </summary>
        </member>
        <member name="P:engenious.UI.PropertyEventArgs`1.NewValue">
            <summary>
            Der neue Wert der Property
            </summary>
        </member>
        <member name="M:engenious.UI.PropertyEventArgs`1.#ctor">
            <summary>
            Erzeugt eine neue Instaz der PropertyEventArgs-Klasse
            </summary>
        </member>
        <member name="M:engenious.UI.PropertyEventArgs`1.#ctor(`0,`0)">
            <summary>
            Erzeugt eine neue Instaz der PropertyEventArgs-Klasse
            </summary>
            <param name="oldValue">Der alte Wert</param>
            <param name="newValue">Der neue Wert</param>
        </member>
        <member name="T:engenious.UI.MouseEventArgs">
            <summary>
            Event Arguments für alle Mouse Events.
            </summary>
        </member>
        <member name="P:engenious.UI.MouseEventArgs.MouseMode">
            <summary>
            Gibt den aktuellen Modus der Maus an.
            </summary>
        </member>
        <member name="M:engenious.UI.MouseEventArgs.#ctor">
            <summary>
            Erzeugt eine neue Instanz der MouseEventArgs-Klasse
            </summary>
        </member>
        <member name="M:engenious.UI.MouseEventArgs.#ctor(engenious.UI.MouseMode,engenious.Point,engenious.Point)">
            <summary>
            Erzeugt eine neue Instanz der MouseEventArgs-Klasse
            </summary>
            <param name="mouseMode">Der aktuelle Modus der Maus</param>
            <param name="localPosition">Position des Mauspointers bezogen auf den Ursprung des aktuellen Controls</param>
            <param name="globalPosition">Position des Mauspointers in globaler Screen-Koordinate</param>
        </member>
        <member name="T:engenious.UI.MouseScrollEventArgs">
            <summary>
            Event Arguments für Maus Scroll Events
            </summary>
        </member>
        <member name="P:engenious.UI.MouseScrollEventArgs.Steps">
            <summary>
            Gibt die  Anzahl der gescrollte Einheiten an.
            </summary>
        </member>
        <member name="M:engenious.UI.MouseScrollEventArgs.#ctor">
            <summary>
            Erzeugt eine neue Instanz der MouseScrollEventArgs-Klasse.
            </summary>
        </member>
        <member name="M:engenious.UI.MouseScrollEventArgs.#ctor(System.Int32)">
            <summary>
            Erzeugt eine neue Instanz der MouseScrollEventArgs-Klasse.
            </summary>
            <param name="steps">Anzahl der gescrollten Einheiten</param>
        </member>
        <member name="T:engenious.UI.TouchEventArgs">
            <summary>
            Event Args für alle Touch-basierten Events.
            </summary>
        </member>
        <member name="P:engenious.UI.TouchEventArgs.TouchId">
            <summary>
            ID des Touch Points.
            </summary>
        </member>
        <member name="T:engenious.UI.KeyEventArgs">
            <summary>
            Event Arguemnts für Tastatur-Events.
            </summary>
        </member>
        <member name="P:engenious.UI.KeyEventArgs.Shift">
            <summary>
            Gibt an ob eine der Shift-Tasten gedrückt wurde.
            </summary>
        </member>
        <member name="P:engenious.UI.KeyEventArgs.Ctrl">
            <summary>
            Gibt an ob die Steuerungstaste gedrückt wurde.
            </summary>
        </member>
        <member name="P:engenious.UI.KeyEventArgs.Alt">
            <summary>
            Gibts an ob eine der Alt-Tasten gedrückt wurde.
            </summary>
        </member>
        <member name="P:engenious.UI.KeyEventArgs.Key">
            <summary>
            Gibt die Taste an, für die das Event gefeuert wurde.
            </summary>
        </member>
        <member name="T:engenious.UI.KeyTextEventArgs">
            <summary>
            Event Arguments für Text-Eingabe
            </summary>
        </member>
        <member name="P:engenious.UI.KeyTextEventArgs.Character">
            <summary>
            Der eingegebene Buchstabe.
            </summary>
        </member>
        <member name="T:engenious.UI.SelectionEventArgs`1">
            <summary>
            Event Argumgents für Selektionsänderungen
            </summary>
        </member>
        <member name="P:engenious.UI.SelectionEventArgs`1.OldItem">
            <summary>
            Das bisher selektiertes Item
            </summary>
        </member>
        <member name="P:engenious.UI.SelectionEventArgs`1.NewItem">
            <summary>
            Das neu selektierte Item
            </summary>
        </member>
        <member name="T:engenious.UI.CollectionEventArgs">
            <summary>
            Parameter für Collection-Events
            </summary>
        </member>
        <member name="P:engenious.UI.CollectionEventArgs.Control">
            <summary>
            Das betroffene Control
            </summary>
        </member>
        <member name="P:engenious.UI.CollectionEventArgs.Index">
            <summary>
            Der betroffene Index
            </summary>
        </member>
        <member name="T:engenious.UI.NavigationEventArgs">
            <summary>
            Parameter für Screen-Navigationsevents
            </summary>
        </member>
        <member name="P:engenious.UI.NavigationEventArgs.Cancel">
            <summary>
            Soll die Navigation an dieser Stelle abgebrochen werden?
            </summary>
        </member>
        <member name="P:engenious.UI.NavigationEventArgs.Parameter">
            <summary>
            Übergabe-Parameter aus dem anderen Screen.
            </summary>
        </member>
        <member name="P:engenious.UI.NavigationEventArgs.Screen">
            <summary>
            Gibt den zweiten an der Navigation beteiligten Screen hat.
            </summary>
        </member>
        <member name="P:engenious.UI.NavigationEventArgs.IsBackNavigation">
            <summary>
            Gibt an ob es sich dabei um eine Back-Navigation handelt oder nicht.
            </summary>
        </member>
        <member name="T:engenious.UI.EventDelegate">
            <summary>
            Standard Event-Delegate ohne größeren Parameter.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:engenious.UI.DragEventDelegate">
            <summary>
            Event-Delegat für Drag-Events
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:engenious.UI.MouseEventDelegate">
            <summary>
            Event Delegat für Maus-Events.
            </summary>
            <param name="sender">Aufrufendes Control</param>
            <param name="args">Eventargumente</param>
        </member>
        <member name="T:engenious.UI.MouseEventBaseDelegate">
            <summary>
            Event Delegat für Mouse-Events
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:engenious.UI.MouseScrollEventDelegate">
            <summary>
            Event-Delegat für Maus-Scroll-Events.
            </summary>
            <param name="sender">Aufrufendes Control</param>
            <param name="args">Eventargumente</param>
        </member>
        <member name="T:engenious.UI.KeyEventDelegate">
            <summary>
            Event Delegat für Keyboard-Events.
            </summary>
            <param name="sender">Aufrufendes Control</param>
            <param name="args">Eventargumente</param>
        </member>
        <member name="T:engenious.UI.KeyEventBaseDelegate">
            <summary>
            Event Delegat für KeyDown im ScreenManager
            </summary>
            <param name="args">Eventargumente</param>
        </member>
        <member name="T:engenious.UI.KeyTextEventDelegate">
            <summary>
            Event Delegat für Texteingabe-Events
            </summary>
            <param name="sender">Aufrufendes Control</param>
            <param name="args">Eventargumente</param>
        </member>
        <member name="T:engenious.UI.SelectionDelegate`1">
            <summary>
            Delegat für Events rum um Selektionsänderungen
            </summary>
            <param name="sender"></param>
            <param name="args">Eventargumente</param>
        </member>
        <member name="T:engenious.UI.PropertyChangedDelegate`1">
            <summary>
            Event Delegat für PropertyChanged-Events
            </summary>
            <typeparam name="T">Typ der Property</typeparam>
            <param name="sender">Aufrufendes Control</param>
            <param name="args">Eventargumente</param>
        </member>
        <member name="T:engenious.UI.ExtensionMethods">
            <summary>
            Stellt Hilfsmethoden als Erweiterungsmethoden bereit.
            </summary>
        </member>
        <member name="M:engenious.UI.ExtensionMethods.Intersection(engenious.Rectangle,engenious.Rectangle)">
            <summary>
            Ermittelt die Schnittfläche zweiter Rechtecke.
            </summary>
            <param name="r1">Rechteck 1</param>
            <param name="r2">Rechteck 2</param>
            <returns>Schnittmenge</returns>
        </member>
        <member name="M:engenious.UI.ExtensionMethods.Transform(engenious.Rectangle,engenious.Matrix)">
            <summary>
            Transformiert ein Rechteck mit der angegebenen Transformationsmatrix.
            </summary>
            <param name="rectangle">Rechteck</param>
            <param name="transform">Transformationsmatrix</param>
            <returns>Transformiertes Rechteck</returns>
        </member>
        <member name="M:engenious.UI.ExtensionMethods.Intersects(engenious.Rectangle,engenious.Point)">
            <summary>
            Gibt an ob der angegebene Punkt innerhalb des Rectangles liegt oder nicht.
            </summary>
            <param name="rectangle">Zu untersuchendes Rechteck</param>
            <param name="point">Punkt</param>
            <returns>Liegt drin oder nicht?</returns>
        </member>
        <member name="P:engenious.UI.IControl.ScreenManager">
            <summary>
            Reference to the current screen manager
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.ClickSound">
            <summary>
            Sound to be played on click
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.HoverSound">
            <summary>
            Sound to be played on hover
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Background">
            <summary>
            Default background
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.HoveredBackground">
            <summary>
            Optional background on hover
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.PressedBackground">
            <summary>
            Optional background on pressed
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.DisabledBackground">
            <summary>
            Optional background when <see cref="P:engenious.UI.IControl.Enabled"/> is <see langword="false"/>
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Margin">
            <summary>
            Legt den äußeren Abstand des Contro { return zOrder; }ls fest.
            </summary> { return zOrder; }
        </member>
        <member name="P:engenious.UI.IControl.Padding">
            <summary>
            Legt den inneren Abstand des Controls fest.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.DrawFocusFrame">
            <summary>
            Legt fest ob der Fokus-Rahmen gezeichnet werden soll
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Tag">
            <summary>
            Platzhalter für jegliche Art der Referenz.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Style">
            <summary>
            Gibt den Style-Namen des Controls zurück oder legt diesen fest.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Enabled">
            <summary>
            Gibt an, ob das Control aktiv ist.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.AbsoluteEnabled">
            <summary>
            Ermittelt den absoluten Aktivierungsstatus von Root bis zu diesem Control.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Visible">
            <summary>
            Gibt an, ob das Control gerendert werden soll.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.AbsoluteVisible">
            <summary>
            Ermittelt den absoluten Sichtbarkeitsstatus von Root bis zu diesem Control.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Root">
            <summary>
            Gibt das Root-Element des zugehörigen Visual Tree zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.RootPath">
            <summary>
            Liefert den Control-Path von Root zum aktuellen Control.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Parent">
            <summary>
            Gibt das Parent-Element dieses Controls zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.HorizontalAlignment">
            <summary>
            Horizontale Ausrichtung im Dynamic-Mode.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Transformation">
            <summary>
            Gibt eine zusätzliche Render-Transformation an.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.AbsoluteTransformation">
            <summary>
            Gibt die absolute Transformation für dieses Control zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Alpha">
            <summary>
            Gibt den Alpha-Wert dieses Controls an.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.AbsoluteAlpha">
            <summary>
            Gibt den absoluten Alpha-Wert für dieses Control zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.VerticalAlignment">
            <summary>
            Vertikale Ausrichtung im Dynamic-Mode.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.MinWidth">
            <summary>
            Legt optional eine Mindestbreite für dieses Control fest.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Width">
            <summary>
            Legt optional eine definierte Breite für dieses Control fest.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.MaxWidth">
            <summary>
            Legt optional eine Maximalbreite für dieses Control fest.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.MinHeight">
            <summary>
            Legt optional eine Mindesthöhe für dieses Control fest.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Height">
            <summary>
            Legt optional eine definierte Höhe für dieses Control fest. 
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.MaxHeight">
            <summary>
            Legt optional eine Maximalbreite für dieses Control fest.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.ActualPosition">
            <summary>
            Gibt die tatsächliche Renderposition (exkl. Parent Offset) zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.AbsolutePosition">
            <summary>
            Gibt die absolute Position (global) dieses Controls zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.ActualSize">
            <summary>
            Gibt die tatsächliche Rendergröße zurück.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.ActualClientArea">
            <summary>
            Berechnet den Client-Bereich auf Basis der aktuellen 
            Position/Größe/Margin/Padding in lokalen Koordinaten.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.ActualClientSize">
            <summary>
            Berechnet den Verfügbaren Client-Bereich unter Berücksichtigung der 
            ActualSize und den eingestellten Margins und Paddings.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Borders">
            <summary>
            Ermittelt den gesamten Rand durch Margin und Padding.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Hovered">
            <summary>
            Gibt an, ob das Control unter der Maus ist.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Pressed">
            <summary>
            Gibt an ob das aktuelle Elemente gerade duch die Maus gedrückt wird.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.TabStop">
            <summary>
            Legt fest, ob das Control per Tab zu erreichen ist.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.CanFocus">
            <summary>
            Gibt an ob das Control den Fokus bekommen kann oder legt dies fest.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.TabOrder">
            <summary>
            Gibt die Position der Tab-Reihenfolge an.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.Focused">
            <summary>
            Gibt an ob das aktuelle Control den Fokus hat.
            </summary>
        </member>
        <member name="P:engenious.UI.IControl.ZOrder">
            <summary>
            Gibt die grafische Reihenfolge der Controls 
            innerhalb eines Containers an. (0 ganz vorne, 9999 weiter hinten)
            </summary>
        </member>
        <member name="M:engenious.UI.IControl.Draw(engenious.Graphics.SpriteBatch,engenious.Rectangle,engenious.GameTime)">
            <summary>
            Zeichenauruf für das Control (SpriteBatch ist bereits aktiviert)
            </summary>
            <param name="batch">Spritebatch</param>
            <param name="gameTime">Vergangene Spielzeit</param>
        </member>
        <member name="E:engenious.UI.IControl.ParentChanged">
            <summary>
            Event das die Änderung des Parents signalisiert.
            </summary>
        </member>
        <member name="M:engenious.UI.IControl.GetExpectedSize(engenious.Point)">
            <summary>
            Methode zur Ermittlung des notwendigen Platzes.
            </summary>
            <param name="available">Verfügbarer Platz für dieses Control</param>
            <returns>Benötigte Platz inklusive allen Rändern</returns>
        </member>
        <member name="M:engenious.UI.IControl.GetMaxClientSize(engenious.Point)">
            <summary>
            Ermittelt die maximale Größe des Client Bereichs für dieses Control.
            </summary>
            <param name="containerSize"></param>
            <returns></returns>
        </member>
        <member name="M:engenious.UI.IControl.GetMinClientSize(engenious.Point)">
            <summary>
            Ermittelt die minimale Größe des Client Bereichs für dieses Control.
            </summary>
            <param name="containerSize"></param>
            <returns></returns>
        </member>
        <member name="M:engenious.UI.IControl.SetActualSize(engenious.Point)">
            <summary>
            Legt die tatsächliche Größe für dieses Control fest.
            </summary>
            <param name="available">Erwartete Größe des Controls (inkl. Borders)</param>
        </member>
        <member name="M:engenious.UI.IControl.HasInvalidDimensions">
            <summary>
            Gibt zurück, ob die Größenangaben nicht mehr aktuell sind.
            </summary>
            <returns></returns>
        </member>
        <member name="M:engenious.UI.IControl.CalculcateRequiredClientSpace(engenious.Point)">
            <summary>
            Ist für die Berechnung des Client-Contents zuständig und erleichtert das automatische Alignment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:engenious.UI.IControl.InvalidateDimensions">
            <summary>
            Teilt dem Steuerelement mit, dass seine Größe neu berechnet werden muss.
            </summary>
        </member>
        <member name="M:engenious.UI.IControl.OnResolutionChanged">
            <summary>
            Wird aufgerufen, wenn die Auflösung des Fensters geändert wird.
            </summary>
        </member>
        <member name="E:engenious.UI.IControl.LeftMouseDown">
            <summary>
            Wird aufgerufen, wenn die linke Maustaste heruntergedrückt wird.
            </summary>
        </member>
        <member name="E:engenious.UI.IControl.LeftMouseUp">
            <summary>
            Wird aufgerufen, wenn die linke Maustaste losgelassen wird.
            </summary>
        </member>
        <member name="E:engenious.UI.IControl.LeftMouseClick">
            <summary>
            Wird aufgerufen, wenn mit der linken Maustaste auf das Steuerelement geklickt wird.
            </summary>
        </member>
        <member name="E:engenious.UI.IControl.RightMouseDown">
            <summary>
            Wird aufgerufen, wenn die rechte Maustaste heruntergedrückt wird.
            </summary>
        </member>
        <member name="E:engenious.UI.IControl.RightMouseUp">
            <summary>
            Wird aufgerufen, wenn die rechte Maustaste losgelassen wird.
            </summary>
        </member>
        <member name="E:engenious.UI.IControl.RightMouseClick">
            <summary>
            Wird aufgerufen, wenn mit der rechten Maustaste auf das Steuerelement geklickt wird.
            </summary>
        </member>
        <member name="E:engenious.UI.IControl.KeyDown">
            <summary>
            Wird aufgerufen, wenn eine Taste gedrückt wird.
            </summary>
        </member>
        <member name="E:engenious.UI.IControl.KeyUp">
            <summary>
            Wird aufgerufen, wenn eine Taste losgelassen wird.
            </summary>
        </member>
        <member name="E:engenious.UI.IControl.KeyPress">
            <summary>
            Wird aufgerufen, wenn eine Taste gedrückt ist.
            </summary>
        </member>
        <member name="M:engenious.UI.IControl.Focus">
            <summary>
            Setzt den Fokus auf dieses Control.
            </summary>
        </member>
        <member name="M:engenious.UI.IControl.Unfocus">
            <summary>
            Entfernt den Fokus.
            </summary>
        </member>
        <member name="T:engenious.UI.ItemCollection`1">
            <summary>
            Erweiterte Liste für Controls
            </summary>
        </member>
        <member name="T:engenious.UI.MouseMode">
            <summary>
            Liste der möglichen Mouse-Modi für den Screen.
            </summary>
        </member>
        <member name="F:engenious.UI.MouseMode.Captured">
            <summary>
            Der Mauszeiger wird im Zentrum gefangen und nach jeder Bewegung wieder zurück 
            gesetzt. Er wird ausgeblendet und die Bewegungswerte innerhalb der Mouse-Events 
            entsprechen dem Bewegungsdelta seit dem letzten Aufruf.
            </summary>
        </member>
        <member name="F:engenious.UI.MouseMode.Free">
            <summary>
            Der Mauszeiger kann sich frei bewegen und wird ganz normal angezeigt.
            </summary>
        </member>
        <member name="T:engenious.UI.Orientation">
            <summary>
            Auflistung von Orientierungen.
            </summary>
        </member>
        <member name="F:engenious.UI.Orientation.Horizontal">
            <summary>
            Horizantale Orientierung.
            </summary>
        </member>
        <member name="F:engenious.UI.Orientation.Vertical">
            <summary>
            Vertikale Orientierung.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.Pix">
            <summary>
            Basis-Pixel
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.Current">
            <summary>
            Aktueller Skin
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.SplitterWidth">
            <summary>
            Gibt die Standard-Breite für den Splitter innerhalb eines Split-Containers an.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.ScrollbarWidth">
            <summary>
            Gibt die Standard-Breite einer Scrollbar an.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.ScrollerMinSize">
            <summary>
            Gibt die mindestgröße des greifbaren Scrollers innerhalb einer Scrollbar an.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.ButtonBrush">
            <summary>
            Default Hintergrund für Buttons.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.ButtonHoverBrush">
            <summary>
            Hintergrund für Buttons im Hover-State.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.ButtonPressedBrush">
            <summary>
            Hintergrund für Buttons die aktuell gedrückt sind.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.ButtonDisabledBrush">
            <summary>
            Hintergrund für Buttons die aktuell deaktiviert sind.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.VerticalScrollBackgroundBrush">
            <summary>
            Definiert den Brush zum Zeichnen eines vertikalen Scrollbar-Hintergrunds.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.HorizontalScrollBackgroundBrush">
            <summary>
            Definiert den Brush zum Zeichnen eines horizontalen Scrollbar-Hintergrunds.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.VerticalScrollKnobBrush">
            <summary>
            Definiert den Brush zum Zeichnen des Scrollbar-Blocks innerhalb einer vertikalen Scrollbar.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.HorizontalScrollKnobBrush">
            <summary>
            Definiert den Brush zum Zeichnen des Scrollbar-Blocks innerhalb einer horizontalen Scrollbar.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.HorizontalSplitterBrush">
            <summary>
            Definiert den Brush zum Zeichnen eines horizontalen Splitters.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.VerticalSplitterBrush">
            <summary>
            Definiert den Brush zum Zeichnen eines vertikalen Splitters.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.FocusFrameBrush">
            <summary>
            Definiert den Standard-Brush zur Markierung des fokusierten Controls.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.SelectedItemBrush">
            <summary>
            Standard-Brush für selektierte Elemente innerhalb von Listboxen.
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.ProgressBarBrush">
            <summary>
            Standard-Brush für die Progress-Bar
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.TextboxBackgroundBrush">
            <summary>
            Background-Brush for Textbox
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.ControlSkins">
            <summary>
            Dictionary für das Skinning gezielter Control-Types
            </summary>
        </member>
        <member name="P:engenious.UI.Skin.StyleSkins">
            <summary>
            Dictionary für das Skinning gezielter Style-Klassen.
            </summary>
        </member>
        <member name="T:engenious.UI.Transition">
            <summary>
            Basisklasse für Animationstransitions von Controls.
            </summary>
        </member>
        <member name="P:engenious.UI.Transition.Current">
            <summary>
            Aktuell abgelaufene Zeit der Animation.
            </summary>
        </member>
        <member name="P:engenious.UI.Transition.Delay">
            <summary>
            Wartezeit bis zum Start der Animation.
            </summary>
        </member>
        <member name="P:engenious.UI.Transition.Duration">
            <summary>
            Länge der Animation.
            </summary>
        </member>
        <member name="P:engenious.UI.Transition.Control">
            <summary>
            Control, das animiert wird.
            </summary>
        </member>
        <member name="P:engenious.UI.Transition.Curve">
            <summary>
            Bewegungskurve.
            </summary>
        </member>
        <member name="M:engenious.UI.Transition.#ctor(engenious.UI.Control,System.Func{System.Single,System.Single},System.TimeSpan)">
            <summary>
            Erstellt eine neue Transition für das angegebene Control.
            </summary>
            <param name="control">Zielcontrol.</param>
            <param name="curve">Bewegungskurve.</param>
            <param name="duration">Animationslänge.</param>
        </member>
        <member name="M:engenious.UI.Transition.#ctor(engenious.UI.Control,System.Func{System.Single,System.Single},System.TimeSpan,System.TimeSpan)">
            <summary>
            Erstellt eine neue Transition für das angegebene Control.
            </summary>
            <param name="control">Zielcontrol.</param>
            <param name="curve">Bewegungskurve.</param>
            <param name="duration">Animationslänge.</param>
            <param name="delay">Wartezeit bis zum Start der Animation.</param>
        </member>
        <member name="M:engenious.UI.Transition.Update(engenious.GameTime)">
            <summary>
            Update-Methode für die Animation.
            </summary>
            <param name="gameTime"></param>
            <returns></returns>
        </member>
        <member name="M:engenious.UI.Transition.ApplyValue(engenious.UI.Control,System.Single)">
            <summary>
            Wendet die Transition auf das Steuerelement an.
            </summary>
            <param name="control">Zielcontrol der Transition.</param>
            <param name="value">Wert im zeitlichen Ablauf der Transition.</param>
        </member>
        <member name="M:engenious.UI.Transition.Clone(engenious.UI.Control)">
            <summary>
            Fertigt eine Kopie dieser Transition an, ersetzt aber das Zielcontrol.
            </summary>
            <param name="control">Das neue Zielcontrol.</param>
            <returns></returns>
        </member>
        <member name="E:engenious.UI.Transition.Finished">
            <summary>
            Signalisiert das Ende der Animation.
            </summary>
        </member>
        <member name="M:engenious.UI.Transition.Linear(System.Single)">
            <summary>
            Lineare Bewegung
            </summary>
            <param name="position">Verlaufsposition im Wertebereich 0 bis 1</param>
            <returns>Wert-Multiplikator</returns>
        </member>
        <member name="M:engenious.UI.Transition.Qubic(System.Single)">
            <summary>
            Quadratische Bewegung
            </summary>
            <param name="position">Verlaufsposition im Wertebereich 0 bis 1</param>
            <returns>Wert-Multiplikator</returns>
        </member>
        <member name="T:engenious.UI.TransitionDelegate">
            <summary>
            Delegat für Events bei Transistions.
            </summary>
            <param name="sender">Die auslösende Transition.</param>
            <param name="control">Das animierte Control.</param>
        </member>
        <member name="T:engenious.UI.TranslateTransition">
            <summary>
            Transition, die eine Trnslation auf das Zielcontrol anwendet.
            </summary>
        </member>
        <member name="M:engenious.UI.TranslateTransition.#ctor(engenious.UI.Control,System.Func{System.Single,System.Single},System.TimeSpan,engenious.Point)">
            <summary>
            Erzeugt eine neue AlphaTransition für das angegebene Control.
            </summary>
            <param name="control">Zielcontrol.</param>
            <param name="curve">Bewegungskurve.</param>
            <param name="duration">Animationslänge.</param>
            <param name="to">Zieltranformation.</param>
        </member>
        <member name="M:engenious.UI.TranslateTransition.#ctor(engenious.UI.Control,System.Func{System.Single,System.Single},System.TimeSpan,System.TimeSpan,engenious.Point)">
            <summary>
            Erzeugt eine neue AlphaTransition für das angegebene Control.
            </summary>
            <param name="control">Zielcontrol.</param>
            <param name="curve">Bewegungskurve.</param>
            <param name="duration">Animationslänge.</param>
            <param name="delay">Wartezeit bis zum Start der Animation.</param>
            <param name="to">Zieltransformation.</param>
        </member>
        <member name="M:engenious.UI.TranslateTransition.ApplyValue(engenious.UI.Control,System.Single)">
            <summary>
            Wendet die Transition auf das Steuerelement an.
            </summary>
            <param name="control">Zielcontrol der Transition.</param>
            <param name="value">Wert im zeitlichen Ablauf der Transition.</param>
        </member>
        <member name="M:engenious.UI.TranslateTransition.Clone(engenious.UI.Control)">
            <summary>
            Fertigt eine Kopie dieser Transition an, ersetzt aber das Zielcontrol.
            </summary>
            <param name="control">Das neue Zielcontrol.</param>
            <returns></returns>
        </member>
    </members>
</doc>
